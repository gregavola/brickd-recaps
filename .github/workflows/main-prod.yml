on:
  push:
    branches:
      - main

jobs:
  deploy_source:
    name: build and deploy lambda
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }} # ⬅️ provide token to npm

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "@brickdapp:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" >> ~/.npmrc
      - name: Install dependencies
        run: npm install

      - name: Merge shared schema with local generators
        run: |
          awk '
            BEGIN { skip=0 }
            /^generator client {/,/^}/ {
              if (/^generator client {/) { skip=1 }
              if (skip && /^}/) { skip=0; next }
              if (skip) { next }
            }
            { print }
          ' node_modules/@brickdapp/prisma-schema/prisma/schema.prisma > prisma/merged.prisma

          cat prisma/platform-generator.prisma >> prisma/merged.prisma

      - name: Print merged Prisma schema (For Debug)
        run: cat prisma/merged.prisma

      - name: Generate Prisma client and typed SQL
        run: npx prisma generate --schema=prisma/merged.prisma --sql
        env:
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          DATABASE_URL: ${{ secrets.DIRECT_URL }}

      - name: Build (Remove Prisma + Debian Libraies)
        run: |
          tsc
          npm run build-remove-prisma
          npm run build-remove-primsa-debian

      - name: deploy zip to s3
        uses: hkusu/s3-upload-action@v2
        with:
          bucket-root: "recaps"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-bucket: "brickd-tasker-zip"
          destination-dir: "/"
          file-path: "./bundle.zip"

      - name: deploy s3 zip to aws lambda
        uses: appleboy/lambda-action@v0.2.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: brickd-recaps
          s3_bucket: "brickd-tasker-zip"
          s3_key: "recaps/bundle.zip"
